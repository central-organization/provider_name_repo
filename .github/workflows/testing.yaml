name: Testing workflow

on:
  pull_request:
    branches: [ master ]
    types: [ labeled ]

  workflow_dispatch:

jobs:
  sanity_check:
    # if: ${{ github.event.label.name == 'integration' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: check PR content
        run: echo PR content is valid

  stage_1:
    needs: sanity_check
    runs-on: ubuntu-latest
    steps:
      - name: clone master repo and submodules
        uses: central-organization/ci_repo/.github/actions/checkout_repo_with_submodules@master
        with:
          repo: central-organization/master_repo
          ref: master
          token: ${{ secrets.SUPER_TOKEN }}

      - name: run LS
        run: ls

      - name: set env variables
        run: echo set env variables

      - name: check python version
        run: python --version | grep "3.8.10" || exit 1

      - name: install requirements
        run: |
          pip install -r ci_repo/Tools/test_framework/requirements.txt

      - name: download package archive
        run: echo download

      - name: unzip package archive
        run: echo unzip

      - name: run Stage-1 tests
        run: python ci_repo/Tools/test_framework/run_test.py

      - name: check if all tests passed
        run: echo check

      - name: archive and upload logs
        run: |
          a=$(find ~ -name pages)
          cp $a/*.log ci_repo/output
          grep "" $a/*.log >> ci_repo/output/all_log_files.log
          tar czvf build_logs_commit_timestamp.tar.gz ci_repo/output/
          file=$(build_logs_commit_timestamp.tar.gz)
          curl -v --user ${{ secrets.JFROG_USERNAME }}:${{ secrets.JFROG_PASSWORD }} --data-binary @$file -X PUT "https://centralorg.jfrog.io/artifactory/Output_logs/$file"

